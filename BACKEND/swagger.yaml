swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/account:
    post:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: User Accounts API
      description: API for fetching a user accounts
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successully
          schema:
            $ref: '#/definitions/AccountResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /account/{accountId}/transaction:
    post:
      security:
        - Bearer: []
      tags:
        - Accounts Module
      summary: Account detail / User transaction API
      description: API for fetching a transaction from an account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: accountID
          description: ID of an account
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User transactions retrieved successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transaction/{transactionId}/category:
    put:
      tags:
        - Accounts Module
      summary: Transaction category
      description: API for fetching category from a transaction
      security: 
        - Bearer: []
      parameters:
        - in: path
          name: transactionId
          description: ID of a transaction
          required: true
          type: string
        - in: body
          name: category
          description: Modified transaction's category
          required: true
          schema:
            $ref: '#/definitions/TransactionCategory'
      responses:
        '200':
          description: Transaction's category modified successfully
          schema: 
            $ref: '#/definitions/TransactionCategory'
        '401': 
          description: Unauthorized user
        '404': 
          description: Transaction not found
        '500': 
          description: Internal Servor Error
  /transaction/{transactionId}/note:
    post:
      tags:
        - Accounts Module
      summary: Add transaction note
      description: API for adding a transaction note
      security: 
        - Bearer: []
      parameters:
        - in: path
          name: transactionId
          description: ID of a transaction
          required: true
          type: string
        - in: body
          name: note
          description: Add transaction note
          required: true
          schema: 
            $ref: '#/definitions/TransactionNote'
      responses:
        '200':
          description: Note added to the transaction successfully
          schema: 
            $ref: '#/definitions/ApiResponseNote'
        '401':
          description: Unauthorized user
        '404':
          description: Note not created
        '500':
          description: Internal Server Error
  /transactions/{transactionId}/note/{noteId}:
    put:
      tags:
        - Accounts Module
      summary: Modify transaction note
      description: API for modifying a note of a transaction
      security: 
        - Bearer: []
      parameters:
        - in: path
          name: transactionId
          description: ID of a transaction
          required: true
          type: string
        - in: path
          name: noteId
          description: ID of a note
          required: true
          type: string
        - in: body
          name: note
          description: Modify transaction note
          required: true
          schema: 
            $ref: '#/definitions/TransactionNote'
      responses:
        '200':
          description: Note modified successfully
          schema:
            $ref: '#/definitions/TransactionResponseNote'
        '401':
          description: Unauthorized user
        '404':
          description: Note not modified
        '500':
          description: Internal Server Error
    delete:
      tags:
        - Accounts Module
      summary: Delete transaction note
      description: API for deleting a note of a transaction
      security:
        - Bearer: []
      parameters:
        - in: path
          name: transactionId
          description: ID of a transaction
          required: true
          type: string
        - in: path
          name: noteId
          description: ID of a note
          required: true
          type: string
      responses:
        '200':
          description: Note deleted successfully
        '401':
          description: Unauthorized user
        '404':
          description: Note not deleted
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  AccountResponse:
    type: object
    properties:
      accountID:
        type: string
        description: account ID
      accountName:
        type: string
        description: account name
      currentBalance:
        type: number
        description: current account balance
        format: double
  TransactionResponse:
    type: object
    properties:
      transactionID: 
        type: string
        description: transaction ID
      transactionType:
        type: string
        description: transaction type
      date:
        type: string
        format: date-time
        description: transaction date
      description:
        type: string
        description: transaction description
      amount:
        type: number
        description: transaction amout
      balance:
        type: number
        description: available balance
        format: double
      category:
        type: string
        description: transaction category name
      note: 
        type: string
        description: transaction user note
  ApiResponseNote:
    type: object
    properties:
      note:
        type: string
      noteID:
        type: string
  TransactionCategory:
    type: object
    properties:
      category:
        type: string
  TransactionNote:
    type: object
    properties:
      note:
        type: string
